name: Backend Tests

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.13
          enable-cache: false

      - name: Install depdencies
        run: |
          git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com".insteadOf "https://github.com"
          uv sync --all-extras

      - name: Run pytest
        run: pytest --cov=./ --cov-report=term-missing ./backend

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            MINIMUM_GREEN: 100
            MINIMUM_ORANGE: 80

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v4
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
            name: python-coverage-comment-action
            path: backend/python-coverage-comment-action.txt

  additional-checks:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.13
          enable-cache: false

      - name: Install depdencies
        run: |
          git config --global url."https://${{ secrets.GIT_HUB_API_KEY }}@github.com".insteadOf "https://github.com"
          uv sync --all-extras

      - name: ruff check
        working-directory: ./backend
        run: ruff check --output-format=github .

      - name: run format
        working-directory: ./backend
        run: ruff format --check .

      - name: validate OpenAPI specification
        working-directory: ./backend
        run: |
          export DJANGO_SECRET_KEY=$(python -c 'from django.core.management.utils import get_random_secret_key;print(get_random_secret_key())')
          python manage.py spectacular --validate --fail-on-warn
